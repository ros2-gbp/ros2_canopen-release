stages:
  - doc
  - build
  - dockerize

doxygen:
  stage: doc
  image: ubuntu:latest
  before_script:
    - apt-get update -qq
    - apt-get install -y -qq doxygen graphviz
  script:
    - cd canopen/doxygen && doxygen
  artifacts:
    paths:
    - canopen/doxygen/doc_output/
  tags:
   - asprunner

sphinx:
  stage: doc
  image: sphinxdoc/sphinx:latest
  before_script:
    - apt-get update -qq
    - apt-get install -y -qq doxygen graphviz
    - pip install sphinx-rtd-theme
    - pip install sphinx-mdinclude
    - pip install breathe
    - pip install exhale
  script:
    - cd canopen/sphinx/
    - make html
  artifacts:
    name: documentation
    paths:
    - canopen/sphinx/_build
  tags:
    - asprunner


.build:
  stage: build
  before_script:
    - apt-get update -qq
    - apt-get install -y -qq git-core
    - git clone --quiet --depth 1 https://github.com/ros-industrial/industrial_ci .industrial_ci
  script: .industrial_ci/gitlab.sh
  services: []
  variables:
    ISOLATION: shell
  tags:
    - asprunner

galactic:
  extends: [.build]
  image: ros:galactic

foxy:
  extends: [.build]
  image: ros:foxy


dockerize-job:
  stage: dockerize
  image: docker:19.03.12
  services:
    - docker:19.03.12-dind
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
    IMAGE_TAG: $CI_REGISTRY_IMAGE/ros2_canopen:$CI_COMMIT_REF_SLUG
    IMAGE_TAG_LATEST: $CI_REGISTRY_IMAGE/ros2_canopen:latest
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker info
  script:
    - docker pull IMAGE_TAG_LATEST || true
    - docker build --cache-from IMAGE_TAG_LATEST --tag $IMAGE_TAG --tag $IMAGE_TAG_LATEST .
    - docker push $IMAGE_TAG
    - docker push $IMAGE_TAG_LATEST
  tags:
    - docker-build
